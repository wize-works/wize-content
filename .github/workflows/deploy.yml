name: Build and Deploy to AKS

on:
  push:
    branches:
      - main

env:
  IMAGE_NAME: wize-content

jobs:
  release:
    name: Semantic Release
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.get_version.outputs.version }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        run: npm ci

      - name: Run semantic-release
        id: semantic
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npx semantic-release

      - name: Get released version from git tag
        id: get_version
        run: |
          VERSION=$(git describe --tags --abbrev=0)
          echo "version=$VERSION" >> $GITHUB_OUTPUT

  build-and-deploy:
    name: Build and Deploy
    needs: release
    if: needs.release.outputs.version != ''
    runs-on: ubuntu-latest
    environment: ${{ github.ref_name == 'main' && 'production' || 'development' }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set VERSION from previous job
        run: echo "VERSION=${{ needs.release.outputs.version }}" >> $GITHUB_ENV

      - name: Log in to Azure
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Install kubelogin (for AAD auth)
        run: |
          curl -LO https://github.com/Azure/kubelogin/releases/download/v0.0.25/kubelogin-linux-amd64.zip
          unzip kubelogin-linux-amd64.zip -d kubelogin
          sudo mv kubelogin/bin/linux_amd64/kubelogin /usr/local/bin
          kubelogin --version

      - name: Set up Docker to use ACR
        run: |
          az acr login --name ${{ secrets.ACR_NAME }}

      - name: Docker Build and Tag
        run: |
          docker build --no-cache -t ${{ secrets.ACR_NAME }}.azurecr.io/${{ env.IMAGE_NAME }}:$VERSION .
          docker tag ${{ secrets.ACR_NAME }}.azurecr.io/${{ env.IMAGE_NAME }}:$VERSION ${{ secrets.ACR_NAME }}.azurecr.io/${{ env.IMAGE_NAME }}:latest

      - name: Docker Push
        run: |
          docker push ${{ secrets.ACR_NAME }}.azurecr.io/${{ env.IMAGE_NAME }}:$VERSION
          docker push ${{ secrets.ACR_NAME }}.azurecr.io/${{ env.IMAGE_NAME }}:latest

      - name: Set AKS Context
        uses: azure/aks-set-context@v4
        with:
          cluster-name: ${{ secrets.AKS_CLUSTER }}
          resource-group: ${{ secrets.AZURE_RG }}

      - name: Debug environment variables
        run: |
          echo "IMAGE_TAG=$VERSION"
          echo "ACR_NAME=${{ secrets.ACR_NAME }}"

      - name: Render deployment.yaml with secrets
        run: |
          envsubst < deployment/deployment.yaml > deployment/deployment.final.yaml
        env:
          IMAGE_TAG: ${{ env.VERSION }}
          ACR_NAME: ${{ secrets.ACR_NAME }}
          SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
          SUPABASE_KEY: ${{ secrets.SUPABASE_KEY }}
          SENTRY_DSN: ${{ secrets.SENTRY_DSN }}

      - name: Deploy to AKS
        run: |
          kubectl apply -f deployment/deployment.final.yaml
          kubectl apply -f deployment/service.yaml
          kubectl apply -f deployment/ingress.yaml
          kubectl rollout status deployment/${{ env.IMAGE_NAME }} -n wizeworks
